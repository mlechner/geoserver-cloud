<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.geoserver.cloud</groupId>
  <artifactId>gs-cloud-bom</artifactId>
  <version>${revision}</version>
  <!-- See https://maven.apache.org/maven-ci-friendly.html -->
  <packaging>pom</packaging>
  <name>GeoServer Cloud</name>
  <modules>
    <module>src</module>
  </modules>
  <properties>
    <revision>1.6.2-SNAPSHOT</revision>
    <fmt.action>format</fmt.action>
    <fmt.skip>false</fmt.skip>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-spring-factory</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>spring-boot-simplejndi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog.jackson</groupId>
        <artifactId>gt-jackson-bindings</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog.jackson</groupId>
        <artifactId>gs-jackson-bindings</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-spring-boot-starter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-catalog-backend</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-security</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog.jackson</groupId>
        <artifactId>gs-cloud-starter-jackson</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-vector-formats</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-raster-formats</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-webmvc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-wms-extensions</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog</groupId>
        <artifactId>gs-cloud-catalog-plugin</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog</groupId>
        <artifactId>gs-cloud-catalog-events</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog</groupId>
        <artifactId>gs-cloud-catalog-event-bus</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-event-bus</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog</groupId>
        <artifactId>gs-cloud-catalog-cache</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog.backend</groupId>
        <artifactId>gs-cloud-catalog-backend-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog.backend</groupId>
        <artifactId>gs-cloud-catalog-backend-datadir</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog.backend</groupId>
        <artifactId>gs-cloud-catalog-backend-jdbcconfig</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.catalog.backend</groupId>
        <artifactId>gs-cloud-catalog-backend-pgconfig</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.gwc</groupId>
        <artifactId>gwc-cloud-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.gwc</groupId>
        <artifactId>gwc-cloud-blobstores</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.gwc</groupId>
        <artifactId>gwc-cloud-services</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.gwc</groupId>
        <artifactId>gwc-cloud-tiling</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.gwc</groupId>
        <artifactId>gwc-cloud-bus-integration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.gwc</groupId>
        <artifactId>gwc-cloud-spring-boot-autoconfigure</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud.gwc</groupId>
        <artifactId>gwc-cloud-spring-boot-starter</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <!-- contains release (including third-party-dependences) -->
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>osgeo-releases</id>
      <name>OSGeo Nexus Release Repository</name>
      <url>https://repo.osgeo.org/repository/release/</url>
    </repository>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <!-- contains snapshots -->
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>osgeo-snapshots</id>
      <name>OSGeo Nexus Snapshot Repository</name>
      <url>https://repo.osgeo.org/repository/snapshot/</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>geoserver-github-packages</id>
      <name>Customized Geoserver Packages</name>
      <?SORTPOM IGNORE?>
      <url>https://public:&#103;hp_jqtFbllekxqlF5zeOB5pm6mffvEdbR4OOLl7@maven.pkg.github.com/camptocamp/geoserver-cloud-geoserver</url>
      <?SORTPOM RESUME?>
    </repository>
  </repositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.spotify.fmt</groupId>
          <artifactId>fmt-maven-plugin</artifactId>
          <version>2.21.1</version>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.5.0</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.11</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
          <createBackupFile>false</createBackupFile>
          <lineSeparator>\n</lineSeparator>
          <nrOfIndentSpace>2</nrOfIndentSpace>
          <verifyFail>stop</verifyFail>
          <verifyFailOn>strict</verifyFailOn>
          <skip>${fmt.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <id>sort</id>
            <goals>
              <goal>sort</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <configuration>
          <verbose>false</verbose>
          <filesNamePattern>.*\.java</filesNamePattern>
          <skip>${fmt.skip}</skip>
          <style>aosp</style>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${fmt.action}</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <!--flattenMode>resolveCiFriendliesOnly</flattenMode -->
          <flattenMode>oss</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>clean</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>coverage</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>coverage</name>
        </property>
      </activation>
      <modules>
        <module>report-aggregate</module>
      </modules>
    </profile>
  </profiles>
</project>
